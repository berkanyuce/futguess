{"ast":null,"code":"// userFunctions.js\n\nconst registerUser = (username, email, password) => {\n  const users = getUsersFromLocalStorage();\n  const newUser = {\n    id: users.length + 1,\n    username,\n    email,\n    password,\n    balance: 0,\n    isAdmin: false\n  };\n  users.push(newUser);\n  setUsersToLocalStorage(users);\n  setLoggedInUser(newUser); // Kullanıcıyı otomatik olarak giriş yapmış say\n  return newUser;\n};\nconst loginUser = (email, password) => {\n  const users = getUsersFromLocalStorage();\n  const user = users.find(u => u.email === email && u.password === password);\n  if (user) {\n    setLoggedInUser(user); // Kullanıcıyı otomatik olarak giriş yapmış say\n  }\n  return user;\n};\nconst getUserById = userId => {\n  const users = getUsersFromLocalStorage();\n  return users.find(u => u.id === userId);\n};\nconst getUsersFromLocalStorage = () => {\n  const usersString = localStorage.getItem('users');\n  return JSON.parse(usersString) || [];\n};\nconst setUsersToLocalStorage = users => {\n  localStorage.setItem('users', JSON.stringify(users));\n};\nconst setLoggedInUser = user => {\n  localStorage.setItem('loggedInUser', JSON.stringify(user));\n};\nconst updateUserBalance = (userId, newBalance) => {\n  const users = getUsersFromLocalStorage();\n  const updatedUsers = users.map(user => user.id === userId ? {\n    ...user,\n    balance: newBalance\n  } : user);\n\n  // LocalStorage'deki veriyi güncelle\n  setUsersToLocalStorage(updatedUsers);\n  // Aynı zamanda loggedInUser'ın bakiyesini de güncelle\n  setLoggedInUser({\n    ...getLoggedInUser(),\n    balance: newBalance\n  });\n};\nexport { registerUser, loginUser, getUserById, getUsersFromLocalStorage, setUsersToLocalStorage, setLoggedInUser, updateUserBalance };","map":{"version":3,"names":["registerUser","username","email","password","users","getUsersFromLocalStorage","newUser","id","length","balance","isAdmin","push","setUsersToLocalStorage","setLoggedInUser","loginUser","user","find","u","getUserById","userId","usersString","localStorage","getItem","JSON","parse","setItem","stringify","updateUserBalance","newBalance","updatedUsers","map","getLoggedInUser"],"sources":["/Users/berkanyuce/Desktop/Workintech/futguess/futguess/futguessf/src/Functions/userFunctions.js"],"sourcesContent":["// userFunctions.js\n\nconst registerUser = (username, email, password) => {\n    const users = getUsersFromLocalStorage();\n    const newUser = {\n      id: users.length + 1,\n      username,\n      email,\n      password,\n      balance: 0,\n      isAdmin: false,\n    };\n    users.push(newUser);\n    setUsersToLocalStorage(users);\n    setLoggedInUser(newUser); // Kullanıcıyı otomatik olarak giriş yapmış say\n    return newUser;\n  };\n  \n  const loginUser = (email, password) => {\n    const users = getUsersFromLocalStorage();\n    const user = users.find((u) => u.email === email && u.password === password);\n    if (user) {\n      setLoggedInUser(user); // Kullanıcıyı otomatik olarak giriş yapmış say\n    }\n    return user;\n  };\n  \n  const getUserById = (userId) => {\n    const users = getUsersFromLocalStorage();\n    return users.find((u) => u.id === userId);\n  };\n  \n  const getUsersFromLocalStorage = () => {\n    const usersString = localStorage.getItem('users');\n    return JSON.parse(usersString) || [];\n  };\n  \n  const setUsersToLocalStorage = (users) => {\n    localStorage.setItem('users', JSON.stringify(users));\n  };\n  \n  const setLoggedInUser = (user) => {\n    localStorage.setItem('loggedInUser', JSON.stringify(user));\n  };\n\n  const updateUserBalance = (userId, newBalance) => {\n    const users = getUsersFromLocalStorage();\n    const updatedUsers = users.map((user) =>\n      user.id === userId ? { ...user, balance: newBalance } : user\n    );\n  \n    // LocalStorage'deki veriyi güncelle\n    setUsersToLocalStorage(updatedUsers);\n    // Aynı zamanda loggedInUser'ın bakiyesini de güncelle\n    setLoggedInUser({ ...getLoggedInUser(), balance: newBalance });\n  };\n\n  export { registerUser, loginUser, getUserById, getUsersFromLocalStorage, setUsersToLocalStorage, setLoggedInUser, updateUserBalance };\n  "],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAChD,MAAMC,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,MAAMC,OAAO,GAAG;IACdC,EAAE,EAAEH,KAAK,CAACI,MAAM,GAAG,CAAC;IACpBP,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRM,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC;EACDN,KAAK,CAACO,IAAI,CAACL,OAAO,CAAC;EACnBM,sBAAsB,CAACR,KAAK,CAAC;EAC7BS,eAAe,CAACP,OAAO,CAAC,CAAC,CAAC;EAC1B,OAAOA,OAAO;AAChB,CAAC;AAED,MAAMQ,SAAS,GAAGA,CAACZ,KAAK,EAAEC,QAAQ,KAAK;EACrC,MAAMC,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,MAAMU,IAAI,GAAGX,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACf,KAAK,KAAKA,KAAK,IAAIe,CAAC,CAACd,QAAQ,KAAKA,QAAQ,CAAC;EAC5E,IAAIY,IAAI,EAAE;IACRF,eAAe,CAACE,IAAI,CAAC,CAAC,CAAC;EACzB;EACA,OAAOA,IAAI;AACb,CAAC;AAED,MAAMG,WAAW,GAAIC,MAAM,IAAK;EAC9B,MAAMf,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,OAAOD,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKY,MAAM,CAAC;AAC3C,CAAC;AAED,MAAMd,wBAAwB,GAAGA,CAAA,KAAM;EACrC,MAAMe,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACjD,OAAOC,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,IAAI,EAAE;AACtC,CAAC;AAED,MAAMR,sBAAsB,GAAIR,KAAK,IAAK;EACxCiB,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACtB,KAAK,CAAC,CAAC;AACtD,CAAC;AAED,MAAMS,eAAe,GAAIE,IAAI,IAAK;EAChCM,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACX,IAAI,CAAC,CAAC;AAC5D,CAAC;AAED,MAAMY,iBAAiB,GAAGA,CAACR,MAAM,EAAES,UAAU,KAAK;EAChD,MAAMxB,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,MAAMwB,YAAY,GAAGzB,KAAK,CAAC0B,GAAG,CAAEf,IAAI,IAClCA,IAAI,CAACR,EAAE,KAAKY,MAAM,GAAG;IAAE,GAAGJ,IAAI;IAAEN,OAAO,EAAEmB;EAAW,CAAC,GAAGb,IAC1D,CAAC;;EAED;EACAH,sBAAsB,CAACiB,YAAY,CAAC;EACpC;EACAhB,eAAe,CAAC;IAAE,GAAGkB,eAAe,CAAC,CAAC;IAAEtB,OAAO,EAAEmB;EAAW,CAAC,CAAC;AAChE,CAAC;AAED,SAAS5B,YAAY,EAAEc,SAAS,EAAEI,WAAW,EAAEb,wBAAwB,EAAEO,sBAAsB,EAAEC,eAAe,EAAEc,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}