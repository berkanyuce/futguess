{"ast":null,"code":"// userFunctions.js\n\nconst registerUser = (username, email, password) => {\n  const users = getUsersFromLocalStorage();\n  const newUser = {\n    id: users.length + 1,\n    username,\n    email,\n    password,\n    balance: 0,\n    isAdmin: false\n  };\n  users.push(newUser);\n  setUsersToLocalStorage(users);\n  setLoggedInUser(newUser); // Kullanıcıyı otomatik olarak giriş yapmış say\n  return newUser;\n};\nconst loginUser = (email, password) => {\n  const users = getUsersFromLocalStorage();\n  const user = users.find(u => u.email === email && u.password === password);\n  if (user) {\n    setLoggedInUser(user); // Kullanıcıyı otomatik olarak giriş yapmış say\n  }\n  return user;\n};\nconst isAdminUser = userId => {\n  const users = getUsersFromLocalStorage();\n  const user = users.find(u => u.id === userId);\n  return user && user.isAdmin;\n};\nconst getUsersFromLocalStorage = () => {\n  const usersString = localStorage.getItem('users');\n  return JSON.parse(usersString) || [];\n};\nconst setUsersToLocalStorage = users => {\n  localStorage.setItem('users', JSON.stringify(users));\n};\nconst setLoggedInUser = user => {\n  localStorage.setItem('loggedInUser', JSON.stringify(user));\n};\nconst addBalance = (userId, amount) => {\n  const users = getUsersFromLocalStorage();\n  const userIndex = users.findIndex(u => u.id === userId);\n  if (userIndex !== -1) {\n    users[userIndex].balance += amount;\n    setUsersToLocalStorage(users);\n\n    // Kullanıcının bakiyesini local storage'e de kaydet\n    localStorage.setItem(`userBalance_${userId}`, users[userIndex].balance);\n  }\n};\nexport { registerUser, loginUser, isAdminUser, addBalance };","map":{"version":3,"names":["registerUser","username","email","password","users","getUsersFromLocalStorage","newUser","id","length","balance","isAdmin","push","setUsersToLocalStorage","setLoggedInUser","loginUser","user","find","u","isAdminUser","userId","usersString","localStorage","getItem","JSON","parse","setItem","stringify","addBalance","amount","userIndex","findIndex"],"sources":["/Users/berkanyuce/Desktop/Workintech/futguess/futguess/futguessf/src/Functions/userFunctions.js"],"sourcesContent":["// userFunctions.js\n\nconst registerUser = (username, email, password) => {\n  const users = getUsersFromLocalStorage();\n  const newUser = {\n    id: users.length + 1,\n    username,\n    email,\n    password,\n    balance: 0,\n    isAdmin: false,\n  };\n  users.push(newUser);\n  setUsersToLocalStorage(users);\n  setLoggedInUser(newUser); // Kullanıcıyı otomatik olarak giriş yapmış say\n  return newUser;\n};\n\nconst loginUser = (email, password) => {\n  const users = getUsersFromLocalStorage();\n  const user = users.find((u) => u.email === email && u.password === password);\n  if (user) {\n    setLoggedInUser(user); // Kullanıcıyı otomatik olarak giriş yapmış say\n  }\n  return user;\n};\n\nconst isAdminUser = (userId) => {\n  const users = getUsersFromLocalStorage();\n  const user = users.find((u) => u.id === userId);\n  return user && user.isAdmin;\n};\n\nconst getUsersFromLocalStorage = () => {\n  const usersString = localStorage.getItem('users');\n  return JSON.parse(usersString) || [];\n};\n\nconst setUsersToLocalStorage = (users) => {\n  localStorage.setItem('users', JSON.stringify(users));\n};\n\nconst setLoggedInUser = (user) => {\n  localStorage.setItem('loggedInUser', JSON.stringify(user));\n};\n\nconst addBalance = (userId, amount) => {\n    const users = getUsersFromLocalStorage();\n    const userIndex = users.findIndex((u) => u.id === userId);\n  \n    if (userIndex !== -1) {\n      users[userIndex].balance += amount;\n      setUsersToLocalStorage(users);\n  \n      // Kullanıcının bakiyesini local storage'e de kaydet\n      localStorage.setItem(`userBalance_${userId}`, users[userIndex].balance);\n    }\n  };\n  \n  \nexport { registerUser, loginUser, isAdminUser, addBalance };\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMC,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,MAAMC,OAAO,GAAG;IACdC,EAAE,EAAEH,KAAK,CAACI,MAAM,GAAG,CAAC;IACpBP,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRM,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC;EACDN,KAAK,CAACO,IAAI,CAACL,OAAO,CAAC;EACnBM,sBAAsB,CAACR,KAAK,CAAC;EAC7BS,eAAe,CAACP,OAAO,CAAC,CAAC,CAAC;EAC1B,OAAOA,OAAO;AAChB,CAAC;AAED,MAAMQ,SAAS,GAAGA,CAACZ,KAAK,EAAEC,QAAQ,KAAK;EACrC,MAAMC,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,MAAMU,IAAI,GAAGX,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACf,KAAK,KAAKA,KAAK,IAAIe,CAAC,CAACd,QAAQ,KAAKA,QAAQ,CAAC;EAC5E,IAAIY,IAAI,EAAE;IACRF,eAAe,CAACE,IAAI,CAAC,CAAC,CAAC;EACzB;EACA,OAAOA,IAAI;AACb,CAAC;AAED,MAAMG,WAAW,GAAIC,MAAM,IAAK;EAC9B,MAAMf,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,MAAMU,IAAI,GAAGX,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKY,MAAM,CAAC;EAC/C,OAAOJ,IAAI,IAAIA,IAAI,CAACL,OAAO;AAC7B,CAAC;AAED,MAAML,wBAAwB,GAAGA,CAAA,KAAM;EACrC,MAAMe,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACjD,OAAOC,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,IAAI,EAAE;AACtC,CAAC;AAED,MAAMR,sBAAsB,GAAIR,KAAK,IAAK;EACxCiB,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACtB,KAAK,CAAC,CAAC;AACtD,CAAC;AAED,MAAMS,eAAe,GAAIE,IAAI,IAAK;EAChCM,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACX,IAAI,CAAC,CAAC;AAC5D,CAAC;AAED,MAAMY,UAAU,GAAGA,CAACR,MAAM,EAAES,MAAM,KAAK;EACnC,MAAMxB,KAAK,GAAGC,wBAAwB,CAAC,CAAC;EACxC,MAAMwB,SAAS,GAAGzB,KAAK,CAAC0B,SAAS,CAAEb,CAAC,IAAKA,CAAC,CAACV,EAAE,KAAKY,MAAM,CAAC;EAEzD,IAAIU,SAAS,KAAK,CAAC,CAAC,EAAE;IACpBzB,KAAK,CAACyB,SAAS,CAAC,CAACpB,OAAO,IAAImB,MAAM;IAClChB,sBAAsB,CAACR,KAAK,CAAC;;IAE7B;IACAiB,YAAY,CAACI,OAAO,CAAE,eAAcN,MAAO,EAAC,EAAEf,KAAK,CAACyB,SAAS,CAAC,CAACpB,OAAO,CAAC;EACzE;AACF,CAAC;AAGH,SAAST,YAAY,EAAEc,SAAS,EAAEI,WAAW,EAAES,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}