{"ast":null,"code":"const fs = require('fs');\nconst usersFilePath = '../Data/Users.json';\nconst readUsersFromFile = () => {\n  try {\n    const fileContent = fs.readFileSync(usersFilePath, 'utf-8');\n    const usersData = JSON.parse(fileContent);\n    return usersData.users || [];\n  } catch (error) {\n    console.error('Error reading users file:', error.message);\n    return [];\n  }\n};\nconst writeUsersToFile = users => {\n  try {\n    const dataToWrite = JSON.stringify({\n      users\n    }, null, 2);\n    fs.writeFileSync(usersFilePath, dataToWrite, 'utf-8');\n  } catch (error) {\n    console.error('Error writing users file:', error.message);\n  }\n};\nconst registerUser = async (username, email, password) => {\n  const users = readUsersFromFile();\n  const newUser = {\n    id: users.length + 1,\n    username,\n    email,\n    password,\n    balance: 0,\n    isAdmin: false\n  };\n  users.push(newUser);\n  writeUsersToFile(users);\n  return newUser;\n};\nconst loginUser = (email, password) => {\n  const users = readUsersFromFile();\n  const user = users.find(u => u.email === email && u.password === password);\n  return user;\n};\nconst isAdminUser = userId => {\n  const users = readUsersFromFile();\n  const user = users.find(u => u.id === userId);\n  return user && user.isAdmin;\n};\nmodule.exports = {\n  registerUser,\n  loginUser,\n  isAdminUser\n};","map":{"version":3,"names":["fs","require","usersFilePath","readUsersFromFile","fileContent","readFileSync","usersData","JSON","parse","users","error","console","message","writeUsersToFile","dataToWrite","stringify","writeFileSync","registerUser","username","email","password","newUser","id","length","balance","isAdmin","push","loginUser","user","find","u","isAdminUser","userId","module","exports"],"sources":["/Users/berkanyuce/Desktop/Workintech/futguess/futguess/futguessf/src/Functions/userFunctions.js"],"sourcesContent":["const fs = require('fs');\n\nconst usersFilePath = '../Data/Users.json';\n\nconst readUsersFromFile = () => {\n  try {\n    const fileContent = fs.readFileSync(usersFilePath, 'utf-8');\n    const usersData = JSON.parse(fileContent);\n    return usersData.users || [];\n  } catch (error) {\n    console.error('Error reading users file:', error.message);\n    return [];\n  }\n};\n\nconst writeUsersToFile = (users) => {\n  try {\n    const dataToWrite = JSON.stringify({ users }, null, 2);\n    fs.writeFileSync(usersFilePath, dataToWrite, 'utf-8');\n  } catch (error) {\n    console.error('Error writing users file:', error.message);\n  }\n};\n\nconst registerUser = async (username, email, password) => {\n  const users = readUsersFromFile();\n  const newUser = {\n    id: users.length + 1,\n    username,\n    email,\n    password,\n    balance: 0,\n    isAdmin: false,\n  };\n  users.push(newUser);\n  writeUsersToFile(users);\n  return newUser;\n};\n\nconst loginUser = (email, password) => {\n  const users = readUsersFromFile();\n  const user = users.find((u) => u.email === email && u.password === password);\n  return user;\n};\n\nconst isAdminUser = (userId) => {\n  const users = readUsersFromFile();\n  const user = users.find((u) => u.id === userId);\n  return user && user.isAdmin;\n};\n\nmodule.exports = { registerUser, loginUser, isAdminUser };\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExB,MAAMC,aAAa,GAAG,oBAAoB;AAE1C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,IAAI;IACF,MAAMC,WAAW,GAAGJ,EAAE,CAACK,YAAY,CAACH,aAAa,EAAE,OAAO,CAAC;IAC3D,MAAMI,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;IACzC,OAAOE,SAAS,CAACG,KAAK,IAAI,EAAE;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;IACzD,OAAO,EAAE;EACX;AACF,CAAC;AAED,MAAMC,gBAAgB,GAAIJ,KAAK,IAAK;EAClC,IAAI;IACF,MAAMK,WAAW,GAAGP,IAAI,CAACQ,SAAS,CAAC;MAAEN;IAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACtDT,EAAE,CAACgB,aAAa,CAACd,aAAa,EAAEY,WAAW,EAAE,OAAO,CAAC;EACvD,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;EAC3D;AACF,CAAC;AAED,MAAMK,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EACxD,MAAMX,KAAK,GAAGN,iBAAiB,CAAC,CAAC;EACjC,MAAMkB,OAAO,GAAG;IACdC,EAAE,EAAEb,KAAK,CAACc,MAAM,GAAG,CAAC;IACpBL,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRI,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC;EACDhB,KAAK,CAACiB,IAAI,CAACL,OAAO,CAAC;EACnBR,gBAAgB,CAACJ,KAAK,CAAC;EACvB,OAAOY,OAAO;AAChB,CAAC;AAED,MAAMM,SAAS,GAAGA,CAACR,KAAK,EAAEC,QAAQ,KAAK;EACrC,MAAMX,KAAK,GAAGN,iBAAiB,CAAC,CAAC;EACjC,MAAMyB,IAAI,GAAGnB,KAAK,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACX,KAAK,KAAKA,KAAK,IAAIW,CAAC,CAACV,QAAQ,KAAKA,QAAQ,CAAC;EAC5E,OAAOQ,IAAI;AACb,CAAC;AAED,MAAMG,WAAW,GAAIC,MAAM,IAAK;EAC9B,MAAMvB,KAAK,GAAGN,iBAAiB,CAAC,CAAC;EACjC,MAAMyB,IAAI,GAAGnB,KAAK,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACR,EAAE,KAAKU,MAAM,CAAC;EAC/C,OAAOJ,IAAI,IAAIA,IAAI,CAACH,OAAO;AAC7B,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAG;EAAEjB,YAAY;EAAEU,SAAS;EAAEI;AAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}